{"ast":null,"code":"import _classCallCheck from \"/Users/rozenmoon/Desktop/burgerapp/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/rozenmoon/Desktop/burgerapp/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/rozenmoon/Desktop/burgerapp/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/rozenmoon/Desktop/burgerapp/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/rozenmoon/Desktop/burgerapp/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/rozenmoon/Desktop/burgerapp/src/containers/BurgerBuilder/BurgerBuilder.js\";\nimport React, { Component } from 'react';\nimport Aux from '../../hoc/Aux';\nimport Burger from '../../components/Burger/Burger';\nimport BurgerControls from '../../components/Burger/BuildControls/BuildControls';\nvar IngredientCosts = {\n  salad: 0.4,\n  bacon: 1.2,\n  cheese: 0.4,\n  meat: 1.4\n};\n\nvar BurgerBuilder =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(BurgerBuilder, _Component);\n\n  function BurgerBuilder() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, BurgerBuilder);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(BurgerBuilder)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      ingredients: {\n        salad: 0,\n        bacon: 0,\n        cheese: 0,\n        meat: 0\n      },\n      cost: 7\n    };\n\n    _this.IngredientAdded = function (type) {\n      var OldCount = _this.state.ingredients[type];\n      var UpdatedCount = _this.OldCount + 1; // const updatedIngredientCost = { ...this.state.ingredients}\n      // updatedIngredientCost[type] = UpdatedCount;\n      // const Oldcost = this.state.cost;\n      // const NewCost = this.Oldcost+ this.IngredientCost[type];\n\n      _this.setState({\n        ingredients: updatedIngredientCost\n      });\n    };\n\n    _this.IngredientReduced = function (type) {\n      var OldCount = _this.state.ingredients[type];\n\n      if (_this.OldCount !== 0) {\n        var UpdatedCount = OldCount - 1; // const updatedIngredientCost = { ...this.state.ingredients}\n        // updatedIngredientCost[type] = UpdatedCount;\n        // const Oldcost = this.state.cost;\n        // const NewCost = Oldcost-this.IngredientCost[type];\n\n        _this.setState({\n          ingredients: updatedIngredientCost\n        });\n      }\n    };\n\n    return _this;\n  }\n\n  _createClass(BurgerBuilder, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(Aux, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58\n        },\n        __self: this\n      }, React.createElement(Burger, {\n        ingredients: this.state.ingredients,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59\n        },\n        __self: this\n      }), React.createElement(BurgerControls, {\n        More: this.IngredientAdded,\n        Less: this.IngredientReduced,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return BurgerBuilder;\n}(Component);\n\nexport default BurgerBuilder;","map":{"version":3,"sources":["/Users/rozenmoon/Desktop/burgerapp/src/containers/BurgerBuilder/BurgerBuilder.js"],"names":["React","Component","Aux","Burger","BurgerControls","IngredientCosts","salad","bacon","cheese","meat","BurgerBuilder","state","ingredients","cost","IngredientAdded","type","OldCount","UpdatedCount","setState","updatedIngredientCost","IngredientReduced"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,GAAP,MAAgB,eAAhB;AACA,OAAOC,MAAP,MAAmB,gCAAnB;AACA,OAAOC,cAAP,MAA2B,qDAA3B;AAGA,IAAMC,eAAe,GAAG;AACpBC,EAAAA,KAAK,EAAG,GADY;AAEpBC,EAAAA,KAAK,EAAG,GAFY;AAGpBC,EAAAA,MAAM,EAAG,GAHW;AAIpBC,EAAAA,IAAI,EAAG;AAJa,CAAxB;;IAQMC,a;;;;;;;;;;;;;;;;;UACFC,K,GAAQ;AACJC,MAAAA,WAAW,EAAE;AACTN,QAAAA,KAAK,EAAE,CADE;AAETC,QAAAA,KAAK,EAAE,CAFE;AAGTC,QAAAA,MAAM,EAAE,CAHC;AAITC,QAAAA,IAAI,EAAE;AAJG,OADT;AAOJI,MAAAA,IAAI,EAAE;AAPF,K;;UAURC,e,GAAkB,UAACC,IAAD,EAAU;AACxB,UAAMC,QAAQ,GAAG,MAAKL,KAAL,CAAWC,WAAX,CAAuBG,IAAvB,CAAjB;AACA,UAAME,YAAY,GAAG,MAAKD,QAAL,GAAc,CAAnC,CAFwB,CAIxB;AACA;AAEA;AACA;;AAEA,YAAKE,QAAL,CAAc;AAACN,QAAAA,WAAW,EAAEO;AAAd,OAAd;AACH,K;;UAEDC,iB,GAAoB,UAACL,IAAD,EAAU;AAC1B,UAAMC,QAAQ,GAAG,MAAKL,KAAL,CAAWC,WAAX,CAAuBG,IAAvB,CAAjB;;AACA,UAAG,MAAKC,QAAL,KAAkB,CAArB,EACA;AACI,YAAMC,YAAY,GAAGD,QAAQ,GAAC,CAA9B,CADJ,CAGI;AACA;AAEA;AACA;;AAEA,cAAKE,QAAL,CAAc;AAACN,UAAAA,WAAW,EAAEO;AAAd,SAAd;AACH;AACJ,K;;;;;;;6BAGD;AACI,aACI,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,MAAD;AAAQ,QAAA,WAAW,EAAI,KAAKR,KAAL,CAAWC,WAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,EAEI,oBAAC,cAAD;AACI,QAAA,IAAI,EAAI,KAAKE,eADjB;AAEI,QAAA,IAAI,EAAI,KAAKM,iBAFjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFJ,CADJ;AASH;;;;EAnDuBnB,S;;AAsD5B,eAAeS,aAAf","sourcesContent":["import React, { Component } from 'react'\nimport Aux from '../../hoc/Aux'\nimport Burger from '../../components/Burger/Burger'\nimport BurgerControls from '../../components/Burger/BuildControls/BuildControls'\n\n\nconst IngredientCosts = {\n    salad : 0.4,\n    bacon : 1.2,\n    cheese : 0.4,\n    meat : 1.4\n}\n\n\nclass BurgerBuilder extends Component {\n    state = {\n        ingredients: {\n            salad: 0,\n            bacon: 0,\n            cheese: 0,\n            meat: 0\n        },\n        cost: 7 \n    }\n\n    IngredientAdded = (type) => {\n        const OldCount = this.state.ingredients[type];\n        const UpdatedCount = this.OldCount+1;\n\n        // const updatedIngredientCost = { ...this.state.ingredients}\n        // updatedIngredientCost[type] = UpdatedCount;\n\n        // const Oldcost = this.state.cost;\n        // const NewCost = this.Oldcost+ this.IngredientCost[type];\n\n        this.setState({ingredients: updatedIngredientCost });\n    }\n\n    IngredientReduced = (type) => {\n        const OldCount = this.state.ingredients[type];\n        if(this.OldCount !== 0)\n        {   \n            const UpdatedCount = OldCount-1;\n\n            // const updatedIngredientCost = { ...this.state.ingredients}\n            // updatedIngredientCost[type] = UpdatedCount;\n\n            // const Oldcost = this.state.cost;\n            // const NewCost = Oldcost-this.IngredientCost[type];\n\n            this.setState({ingredients: updatedIngredientCost });\n        }\n    }\n\n    render()\n    {\n        return (\n            <Aux>\n                <Burger ingredients = {this.state.ingredients}/>\n                <BurgerControls \n                    More = {this.IngredientAdded}\n                    Less = {this.IngredientReduced}/>\n            </Aux>\n        );\n\n    }\n}\n\nexport default BurgerBuilder;"]},"metadata":{},"sourceType":"module"}